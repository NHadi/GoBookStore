basePath: /
definitions:
  commands.AddBookCommand:
    properties:
      author:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  entities.Book:
    properties:
      author:
        allOf:
        - $ref: '#/definitions/value_objects.Author'
        description: Author of the book
      id:
        description: ID of the book
        type: string
      title:
        description: Title of the book
        type: string
    type: object
  rest.BooksResponse:
    properties:
      books:
        items:
          $ref: '#/definitions/entities.Book'
        type: array
      count:
        type: integer
    type: object
  rest.ErrorBody:
    properties:
      message:
        type: string
    type: object
  rest.ErrorResponse:
    properties:
      body:
        allOf:
        - $ref: '#/definitions/rest.ErrorBody'
        description: 'in: body'
    type: object
  value_objects.Author:
    properties:
      name:
        description: The author's name
        type: string
    type: object
host: localhost:8082
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample BookStore
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: BookStore API
  version: "1.0"
paths:
  /books:
    get:
      description: Get a list of all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.BooksResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: List all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create a new book with the provided details
      parameters:
      - description: Add book command
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/commands.AddBookCommand'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      description: Delete a specific book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a book
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update details of a specific book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated book info
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/entities.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a book
      tags:
      - books
  /books/borrow/{userId}/{bookId}:
    post:
      description: Borrow a book for a user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: Book ID
        in: path
        name: bookId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            type: string
        "403":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Borrow a book
      tags:
      - books
swagger: "2.0"
